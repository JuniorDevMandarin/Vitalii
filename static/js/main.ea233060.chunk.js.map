{"version":3,"sources":["api/api.js","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Users/users.module.css","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.jsx","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/common/FormsControls/FormsControls.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/usersReducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","assets/images/users.png","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","reportWebVitals.js","index.js","utils/validators/validators.js","assets/images/Loader.gif","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","requestUsers","currentPage","pageSize","get","then","response","data","follow","usersId","post","unfollow","delete","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","FormControl","input","meta","touched","error","children","hasError","styles","formControl","restProps","child","Input","createField","validators","initialState","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","action","followed","count","filter","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","Id","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsReducer","sidebar","usersPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","Navbar","nav","item","activeClassName","activeLink","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","src","photos","small","userPhoto","disabled","some","Users","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Preloader","compose","bind","page","totalCount","Header","header","loginBlock","HeaderContainer","LoginReduxForm","style","formSummaryError","length","stopSubmit","_error","formData","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","render","withRouter","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderEntireTree","ReactDOM","document","getElementById","getState","subscribe","value","maxLength","backgroundColor","preloader","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","SEND_MESSAGE","sendMessageCreator","body"],"mappings":"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","file":"static/js/main.ea233060.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\" : \"856f6a2f-2037-4996-bfcb-93cf4edda795\",\r\n    }\r\n\r\n});\r\n\r\nexport const usersAPI = {\r\n    requestUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(usersId) {\r\n        return  instance.post(`follow/${usersId}`)\r\n    },\r\n    unfollow(usersId) {\r\n       return  instance.delete(`follow/${usersId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n       return  profileAPI.getProfile(userId);\r\n\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return  instance.get(`profile/` + userId);\r\n\r\n    },\r\n    getStatus(userId) {\r\n        return  instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return  instance.put(`profile/status`, { status: status});\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout(email, password, rememberMe = false) {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n\r\n\r\n}","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\nexport default Message;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3kv_8\"};","import {Component} from \"react\";\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field} from \"redux-form\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} /> );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n       props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\" />\r\n                </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1KboW\",\"item\":\"Navbar_item__cKzM_\",\"activeLink\":\"Navbar_activeLink__16T_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3m_hb\",\"dialogsItems\":\"Dialogs_dialogsItems__EZHOp\",\"active\":\"Dialogs_active__1SCwV\",\"messages\":\"Dialogs_messages__2tWzC\",\"message\":\"Dialogs_message__3kn4U\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta:{touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        />\r\n    </div>)","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState =  {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\r\n  switch (action.type){\r\n       case FOLLOW:\r\n           return {\r\n               ...state,\r\n               users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n           }\r\n       case UNFOLLOW:\r\n           return {\r\n               ...state,\r\n               users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n           }\r\n       case SET_USERS: {\r\n           return { ...state, users: action.users}\r\n       }\r\n      case SET_CURRENT_PAGE: {\r\n          return { ...state, currentPage: action.currentPage}\r\n      }\r\n      case SET_TOTAL_USERS_COUNT: {\r\n          return { ...state, totalUsersCount: action.count}\r\n      }\r\n      case TOGGLE_IS_FETCHING: {\r\n          return { ...state, isFetching: action.isFetching}\r\n      }\r\n      case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n          return { ...state,\r\n              followingInProgress: action.isFetching\r\n                   ?[...state.followingInProgress, action.userId]\r\n                   : state.followingInProgress.filter(id => id != action.userId)\r\n          }\r\n      }\r\n\r\n\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.requestUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI),followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n        let actionCreator = unfollowSuccess;\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\n\r\n\r\n\r\nlet initialState =  {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n\r\n  switch (action.type){\r\n       case SET_USER_DATA:\r\n           return {\r\n               ...state,\r\n               ...action.payload\r\n           }\r\n\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth } })\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {Id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(Id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\nexport default authReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\n\r\n\r\n\r\nlet initialState =  {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n\r\n  switch (action.type){\r\n       case INITIALIZED_SUCCESS:\r\n           return {\r\n               ...state,\r\n               initialized: true\r\n           }\r\n\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\n\r\nexport default appReducer;","import React from \"react\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n\r\n});\r\n\r\nlet store =  createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize=10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>NEXT</button>}\r\n    </div>\r\n}\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/users.aa9f3892.png\";","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/users.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                 <span>\r\n                     <div>\r\n                         <NavLink to={'/profile/' + user.id}>\r\n                           <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                         </NavLink>\r\n                     </div>\r\n                     <div>\r\n                         {user.followed\r\n                             ? <button disabled={followingInProgress\r\n                                 .some(id => id === user.id)} onClick={() => { unfollow(user.id); }}>\r\n                                 Unfollow</button>\r\n\r\n                             : <button disabled={followingInProgress\r\n                                 .some(id => id === user.id)} onClick={() => { follow(user.id);}}>\r\n                                 Follow</button>}\r\n                     </div>\r\n                 </span>\r\n                <span>\r\n                     <span>\r\n                         <div>{user.name}</div>\r\n                         <div>{user.status}</div>\r\n                     </span>\r\n                     <span>\r\n                         <div>{\"user.location.country\"}</div>\r\n                         <div>{\"user.location.city\"}</div>\r\n\r\n                     </span>\r\n                 </span>\r\n            </div>)\r\n\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}/>)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\n const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n\r\nexport const getUsers = createSelector(getUsersSelector,(users) => {\r\n    return users.filter(u => true);\r\n} )\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\nexport const countSomethingDifficult = (state) => {\r\n\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n         let {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ?\r\n                <Preloader/>: null }\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n/*\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n*/\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n/*\r\n        users: getUsersSelectors(state),\r\n*/\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps,{follow, unfollow,\r\n            setCurrentPage, toggleFollowingProgress, requestUsers\r\n    })\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src=\"https://media.istockphoto.com/vectors/modern-creative-letter-s-logotype-abstract-hexagon-logo-creative-vector-id1150024585?b=1&k=6&m=1150024585&s=612x612&w=0&h=tmmD1K_rSoaURfnJtjoUFL5YmRAAq5-71p39jAb6apk=\"/>\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {authAPI} from \"../../api/api\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\nexport default connect(mapStateToProps,{logout}) (HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                {createField(\"Email\", \"email\", [required], Input)}\r\n                {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n                {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n   )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth){\r\n        return <Redirect to={\"profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login}) (Login);","import React, {Component} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {getAuthUserData} from \"./redux/auth-reducer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n\n    render() {\n        if (!this.props.initialized){\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n\n                    <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\n\n\n                    <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\n\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n\n                    <Route path='/login'\n                           render={() => <LoginPage/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose (\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\n/*\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\nexport default SamuraiJSApp;\n*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.css';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n}\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(() => {\n    let state = store.getState();\n    rerenderEntireTree(state);\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export  const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport  const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","export default __webpack_public_path__ + \"static/media/Loader.6bda73b5.gif\";","import preloader from \"../../../assets/images/Loader.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={ {backgroundColor: 'white'} }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__21Bo2\",\"error\":\"FormsControls_error__KFquo\",\"formSummaryError\":\"FormsControls_formSummaryError__3K4Ea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3K997\",\"pageNumber\":\"Paginator_pageNumber__JNe_k\",\"selectPage\":\"Paginator_selectPage__1J0Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1V3Zo\",\"loginBlock\":\"Header_loginBlock__1qSNr\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState =  {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'Nothing is true!!!', likesCount: 11}\r\n    ],\r\n\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n\r\n   switch (action.type) {\r\n       case ADD_POST: {\r\n           let newPost = {\r\n               id: 5,\r\n               message: action.newPostText,\r\n               likesCount: 0\r\n           };\r\n           return  {\r\n               ...state,\r\n               posts: [...state.posts, newPost],\r\n               newPostText: ''\r\n           };\r\n       }\r\n\r\n       case SET_STATUS: {\r\n           return  {\r\n               ...state,\r\n               status: action.status\r\n           };\r\n       }\r\n       case SET_USER_PROFILE: {\r\n           return {...state, profile: action.profile};\r\n       }\r\n       default:\r\n           return state;\r\n   }\r\n}\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Hi is your first React project'},\r\n        {id: 3, message: 'YO YO YO'},\r\n        {id: 4, message: 'Sasha'},\r\n        {id: 5, message: 'Viktor'},\r\n        {id: 6, message: 'Valera'}\r\n    ],\r\n        dialogs: [\r\n        {id: 1, name: 'Vitalii'},\r\n        {id: 2, name: 'Andre'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n     switch (action.type) {\r\n\r\n         case SEND_MESSAGE:\r\n             let body = action.newMessageBody;\r\n             return {\r\n                 ...state,\r\n                 messages: [ ...state.messages, {id: 6, message: body}]\r\n             };\r\n         default:\r\n             return state;\r\n     }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}