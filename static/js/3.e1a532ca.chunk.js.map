{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","maxLength10","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","reduxForm","form","MyPosts","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","React","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","compose","isAuth","auth","withRouter"],"mappings":"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","file":"static/js/3.e1a532ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3kJLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3AcdA\",\"posts\":\"MyPosts_posts__2OY78\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__bsKUu\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcROdUNllTvwag4LcIRAu9tcb8tgbR_RoaGQSE3_Zv6zS2ewaBC6z9PuJ2bYtfxwCRx7d6U&usqp=CAU' />\r\n        {props.message}\r\n          <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field} from \"redux-form\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props)  => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Send Message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostFrom\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode:true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode:false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState)  {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\")\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n       setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode}>{props.status || \"-----\"} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <div>\r\n                <img src='https://images.unsplash.com/photo-1500622944204-b135684e99fd?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bmF0dXJhbHxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&w=1000&q=80'/>\r\n            </div> */}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n           dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n            <MyPostsContainer  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n               /*this.props.history.push(\"/login\");*/\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        //setTimeout(() => {\r\n            this.props.getStatus(userId);\r\n       // }, 1000);\r\n    }\r\n\r\n    render() {\r\n       return (\r\n           <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n       )\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n"],"sourceRoot":""}